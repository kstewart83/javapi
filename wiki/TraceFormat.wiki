#summary The format for pi-thread traces

= Introduction =

blabla

= Format basics =

 * option 1 : use the JSon format to encode the traces

 * option 2 : use s-expressions

 * option 3 : use XML

= High-level traces =

== Spawn a new thread ==

{{{
{  "agentId" : <id> , 
   "clock" : <val> ,
   "trace" = { "type" : "Spawn",
                      "threadName" : <name>,
                      "threadId" : <tid>,
                    }
} 
}}}

Using s-expressions :

{{{
(trace 
   (agentId <id>)
   (clock <val>)
   (msg (type spawn)
             (threadName <name>)
             (threadId <tid>)))))        
}}}

Using infix s-expressions :

{{{
trace {
  agentId = <id>,
  clock = <val>,
  msg {
     type = spawn,
     threadName = <name>,
     threadId = <tid>
  }
}
}}}


== Create a new channel ==

{{{
{  "agentId" : <id> , 
   "clock" : <val> ,
   "trace" = { "type" : "CreateChannel",
                      "Chanid" : <cid>,
                      "Datatype" : <Type>,
                    }
} 
}}}

== Send a message (blocking) ==


{{{
{  "agentId" : <id> , 
   "clock" : <val> ,
   "trace" = { "type" : "BlockingSend",
                      "sendid" : <sid>,
                      "Chanid"   : <cid>                 
                    }
} 
}}}


== Receive a message (blocking) ==

{{{
{  "agentId" : <id> , 
   "clock" : <val> ,
   "trace" = { "type" : "BlockingReceive",
                      "rdcvid" : <rid>,
                      "Chanid"   : <cid>                 
                    }
} 
}}}

== Synchronization (simple send/recv case) ==


{{{
{  "agentId" : <id> , 
   "clock" : <val> ,
   "trace" = { "type" : "Sync",
                      "sendId" : <sid>,
                      "recvId" : <rid>,
                      "chanId" : <cid>,
                      "data" : <repr>
                    }
} 
}}}

== Choice (blocking) ==

{{{
{  "agentId" : <id> , 
   "clock" : <val> ,
   "trace" = { "type" : "Choice",
                      "strategy" : "localPriority",   // also "random", etc...
                      "branches" : [
                          { "guard":  <guard>
                            "action":  { "type" : "send" ,  <etc...>
                          }, 
                         <etc>
                      ]
                    }
} 
}}}

== Enact choice ==

{{{
{  "agentId" : <id> , 
   "clock" : <val> ,
   "trace" = { "type" : "EnactChoiceSync",
                      "sender" : { id:<sid>, branch:<int>},
                      "receiver" : { id:<rid>, branch:<int>},
                      "chanId" : <cid>,
                      "data" : <repr> ,
                    }
} 
}}}

 * Internal choice

{{{
{  "agentId" : <id> , 
   "clock" : <val> ,
   "trace" = { "type" : "EnactChoiceInternal",
                      "thread" : { id:<sid>, branch:<int>},
                    }
} 
}}}

== try Receive ==

== try Send ==

== Log ==



= Low-level traces =

= Wiki help =

Add your content here.  Format your content with:
  * Text in *bold* or _italic_
  * Headings, paragraphs, and lists
  * Automatic links to other wiki pages